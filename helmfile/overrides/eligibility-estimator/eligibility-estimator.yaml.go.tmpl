{{/* THIS EXAMPLE DEPLOYS SUCCESSFULLY TO DTS CLOUD */}}
{{/* READ THE COMMENTS TO MAKE ANY MODIFICATIONS FOR YOUR APPLICATION */}}

{{/* EXAMPLE OF HOW TO INCLUDE ENVIRONMENT VARIABLES */}}
{{/*

extraEnv:
    - name: EXAMPLE_STATIC_ENVIRONMENT_VARIABLE
      value: "hardcodedvalue"
    - name: EXAMPLE_DYNAMIC_ENVIRONMENT_VARIABLE
      value: dynamicvalue-{{ .Environment.Name }}
    - name: EXAMPLE_SECRET_USERNAME
      valueFrom:
        secretKeyRef:
          name: web-example-secret
          key: renamed-example-username
    - name: EXAMPLE_SECRET_PASSWORD
      valueFrom:
        secretKeyRef:
          name: web-example-secret
          key: example-secret-password         
          
*/}}
image:
  repository: {{ requiredEnv "CLOUD_ACR_DOMAIN" }}/{{ requiredEnv "PROJECT" }}
  tag: "{{ env "DOCKER_TAG" | default "latest" }}"
  pullPolicy: Always
service:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /api/metrics
    prometheus.io/port: "3000"
ingress:
    {{/* prod_enabled: {{ requiredEnv "PROD_ENABLED" }}
    ssl_cert: service_canada_ca
    prod_url: {{ requiredEnv "SUB_DOMAIN" }}.{{ requiredEnv "BASE_DOMAIN" }} */}}
    prod_enabled: true
    ssl_cert: service_canada_ca
    prod_url: estimateursv-oasestimator.service.canada.ca
    enabled: true
    annotations: 
      {{ if (eq .Environment.Name "prototype")}}  
      cert-manager.io/cluster-issuer: letsencrypt-prod-alpha-sc
      {{ else }}
      cert-manager.io/cluster-issuer: letsencrypt-prod
      {{ end }}
      appgw.ingress.kubernetes.io/ssl-redirect: "true"
      kubernetes.io/ingress.class: azure/application-gateway
    tls:
      - hosts:
          - {{ requiredEnv "SUB_DOMAIN_PATH" | lower }}.{{ requiredEnv "BASE_DOMAIN" }}
        {{ if (eq .Environment.Name "prototype")}}  
        secretName: ingress-tls-eeprototype
        {{ else }}
        secretName: ingress-tls-{{ requiredEnv "BRANCH" | lower }}
        {{ end }}
    hosts:
    - host: {{ requiredEnv "SUB_DOMAIN_PATH" | lower }}.{{ requiredEnv "BASE_DOMAIN" }}
      paths:
        - path: /
          pathType: ImplementationSpecific
resources:
  requests:
    cpu: 200m
    memory: 512Mi
healthChecks:
  livenessDelay: 15
  readinessDelay: 15
  livenessPath: /
  readinessPath: /
port: 3000
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  volumeMount:
    path: /mnt/example
  storageClass: dtsstorageclass
  size: 2Gi
