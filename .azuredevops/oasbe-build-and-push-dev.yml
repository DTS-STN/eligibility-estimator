trigger:
  - develop

pr: none

# need to use our own self-hosted agent because that is the one who's system identity has AcrPush access to the container registry
pool: lwhpblk-dev-agent-pool

variables:
  azureContainerRegistry.repository: 'oas/eligibility-estimator'
  azureContainerRegistry.name: 'acrlwhpblkdev.azurecr.io'
  azureContainerRegistry.domain: 'acrlwhpblkdev.azurecr.io'
  app.environment: development
  app.buildDate: $[ format('{0:yyyy}-{0:MM}-{0:dd}', pipeline.startTime) ]
  app.domain: 'https://app-eligibilityestimator-dev.lwhpblack-phclnoire.service.cloud-nuage.canada.ca/'
  app.logLevel: 'info'
  image.tag: '$(Build.SourceVersion)'
  System.Debug: false

stages:
  - stage: Cache
    displayName: Pull latest image for caching
    jobs:
      - job:
        displayName: Pull latest image
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'login'

          - script: 'docker pull $(azureContainerRegistry.domain)/$(azureContainerRegistry.repository):latest'
            displayName: Pull latest for layer caching
            continueOnError: true

  - stage: Build
    displayName: Build and Push to ACR
    jobs:
      - job: Build
        displayName: Build and Push Container
        steps:
          - bash: |
              short_hash=`git rev-parse --short=7 HEAD`
              echo ""
              echo "Full git hash:  $(Build.SourceVersion)"
              echo "Short git hash: $short_hash"
              echo "##vso[task.setvariable variable=image.tag]$short_hash"
            workingDirectory: $(Build.SourcesDirectory)
            displayName: Get short git hash
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'lwhpblk-oasbe-dev'
              KeyVaultName: 'kvlwhpblkoasbedev'
              SecretsFilter: 'DEV-ADOBE-ANALYTICS-URL, NEXT-AUTH-PASSWORD, NEXT-AUTH-USERCODE'
              RunAsPreJob: false

          - task: Docker@2
            displayName: Docker Build
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'build'
              Dockerfile: './Dockerfile'
              tags: |
                $(image.tag)
                latest
                release-candidate
              arguments: |
                --pull
                --cache-from $(azureContainerRegistry.domain)/$(azureContainerRegistry.repository):latest
                --build-arg home=/app
                --build-arg NEXT_BUILD_DATE=$(app.buildDate)
                --build-arg NEXTAUTH_URL=$(app.domain)
                --build-arg NEXT_AUTH_USERNAME=$(NEXT-AUTH-USERCODE)
                --build-arg NEXT_AUTH_PASSWORD=$(NEXT-AUTH-PASSWORD)
                --build-arg NEXTAUTH_SECRET=$(NEXT_AUTH_SECRET)
                --build-arg ADOBE_ANALYTICS_URL=$(DEV-ADOBE-ANALYTICS-URL)
                --build-arg APP_ENV=$(app.environment)
                --build-arg LOGGING_LEVEL=$(app.logLevel)

          - task: Docker@2
            displayName: Docker Push
            inputs:
              containerRegistry: '$(azureContainerRegistry.name)'
              repository: '$(azureContainerRegistry.repository)'
              command: 'push'
              tags: |
                $(image.tag)
                latest
                release-candidate
